---
title: "Read and format POC flux observations from Simon’s database"
author: "Thelma Panaïotis"
date: today
format:
  html:
    toc: true
    toc-depth: 3
    embed-resources: true
editor: visual
lightbox: true
execute:
  cache: true
  warning: false
---

```{r set_up}
#| output: false
#| cache: false
#| warning: false
source("utils.R")
```

## Read data

```{r read_obs}
# Read POC flux, in mg/m²/day
obs_flux <- readr::read_csv("data/raw/Global_POC_Database_2025-07-01.csv", show_col_types = FALSE)

# Clean: keep only sediment traps and select relevant columns
obs_flux <- obs_flux %>% 
  filter(
    New_category %in% c("sediment trap", "Thorium"),
    !is.na(depth) # drop unknown depth
  ) %>% 
  select(
    method = New_category,
    lon = longitude, lat = latitude,
    depth,
    poc_flux_obs = poc_converted,
    converted_date, converted_date_deployment, converted_date_recovery,
    date_formatted, date_num, duration
  ) %>% 
  # make duration (days) a number and round it
  mutate(duration = duration %>% as.numeric() %>% round()) |> 
  # generate an ID for each observation
  mutate(id = row_number() |> as.character(), .before = method)
```

The dataset contains `r nrow(obs_flux)` observations of POC fluxes.

## Explore data

Let’s now have a look at observations around the 100 and 1000 metres depth horizons, and try to find an optimal depth range around these depths.

### 100 m

```{r explore_100}
#| fig-column: body-outset
#| out-width: 100%

# 100 m
obs_flux_100 <- bind_rows(
  obs_flux %>% 
    filter(depth == 100) %>% 
    mutate(range = "100 m sharp"),
  obs_flux %>% 
    filter(between(depth, 90, 110)) %>% 
    mutate(range = "90 m - 110 m"),
  obs_flux %>% 
    filter(between(depth, 80, 120)) %>% 
    mutate(range = "80 m - 120 m")
) %>% 
  mutate(range = factor(range, levels = c("100 m sharp", "90 m - 110 m", "80 m - 120 m")))
count(obs_flux_100, range)
ggplot(obs_flux_100) +
  geom_density(aes(x = poc_flux_obs, colour = range)) +
  labs(x = "POC flux (mg C m<sup>-2</sup> d<sup>-1</sup>)", y = "Density", colour = "Depth range", title = "Effect of observation range at 100 m") +
  xlim(0, 1000) +
  theme_classic() +
  theme(axis.title.x = element_markdown())
```

::: callout-note
No big difference in distribution when changing the depth range.
:::

### 1000 m

```{r explore_1000}
#| fig-column: body-outset
#| out-width: 100%

# 1000 m
obs_flux_1000 <- bind_rows(
  obs_flux %>% 
    filter(depth == 1000) %>% 
    mutate(range = "1000 m sharp"),
  obs_flux %>% 
    filter(between(depth, 900, 1100)) %>% 
    mutate(range = "900 m - 1100 m"),
  obs_flux %>% 
    filter(between(depth, 800, 1200)) %>% 
    mutate(range = "800 m - 1200 m")
) %>% 
  mutate(range = factor(range, levels = c("1000 m sharp", "900 m - 1100 m", "800 m - 1200 m")))
count(obs_flux_1000, range)
ggplot(obs_flux_1000) +
  geom_density(aes(x = poc_flux_obs, colour = range)) +
  labs(x = "POC flux (mg C m<sup>-2</sup> d<sup>-1</sup>)", y = "Density", colour = "Depth range", title = "Effect of observation range at 1000 m") +
  xlim(0, 200) +
  theme_classic() +
  theme(axis.title.x = element_markdown())

```

::: callout-note
Quite a difference both in terms of distribution and number of observations.
:::

Let’s check how the selected depth range affects the increase in number of observations.

### Depth range and number of observations

```{r n_obs_range}
#| fig-column: body-outset
#| out-width: 100%

bind_rows(
  # flux a 100 m
  count(obs_flux_100, range) %>% 
    mutate(
      target_depth = 100, # target depth
      n_sharp = min(n), # number of observations at 100 m sharp
      .before = range
    ) %>% 
    filter(n != n_sharp) %>% # discard the row at 100 m sharp 
    mutate(
      inc_range = c("10%", "20%") %>% as.factor(), # increase in depth range 
      inc_n = n / n_sharp # increase in number of observations
    ) %>% 
    select(target_depth, n, inc_range, inc_n),
  # flux a 1000 m
  count(obs_flux_1000, range) %>% 
    mutate(
      target_depth = 1000, # target depth
      n_sharp = min(n), # number of observations at 1000 m sharp
      .before = range
    ) %>% 
    filter(n != n_sharp) %>% # discard the row at 1000 m sharp 
    mutate(
      inc_range = c("10%", "20%") %>% as.factor(), # increase in depth range 
      inc_n = n / n_sharp # increase in number of observations
    ) %>% 
    select(target_depth, n, inc_range, inc_n)
) %>% 
  mutate(target_depth = as.factor(target_depth)) %>% # target depth as factor
  ggplot() +
  geom_point(aes(x = target_depth, y = inc_n, colour = inc_range)) +
  geom_hline(yintercept = 1,  colour = "grey") +
  labs(x = "Target depth", y = "Increase in number of observation", colour = "Increase in\ndepth range") +
  ylim(1, NA)
```

::: callout-note
For 1000 m, there is a strong increase in the number of observations (× 2.5) when considering the range 800 - 1200 m instead of 1000 m. Let’s thus use the 20% range for both 100 and 1000 m.
:::

## Filter target depth

Let’s now filter data in the depth range around selected depth range.

```{r targ_depth}
obs_flux_targ <- bind_rows(
  obs_flux %>% 
    filter(between(depth, 80, 120)) %>% 
    mutate(target_depth = 100),
  obs_flux %>% 
    filter(between(depth, 800, 1200)) %>% 
    mutate(target_depth = 1000)
)
```

## Save data

Save the resulting dataset.

```{r save}
save(obs_flux_targ, file = "data/02.obs_flux_targ.Rdata")
```
